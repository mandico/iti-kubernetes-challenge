buildscript {
    ext.kotlin_version = '1.9.10' // Última versão estável do Kotlin
    ext.ktor_version = '2.3.4'   // Última versão estável do Ktor

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'application'
apply plugin: 'kotlin'

repositories {
    mavenCentral()
}

mainClassName = 'com.example.hello.MainKt'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-server-html-builder:$ktor_version"
    implementation "io.ktor:ktor-server-call-logging:$ktor_version"
    implementation "io.ktor:ktor-server-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation "io.ktor:ktor-server-resources:$ktor_version" // Dependência opcional
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    implementation "io.micrometer:micrometer-registry-prometheus:1.11.3"
    implementation "io.ktor:ktor-server-metrics-micrometer:$ktor_version"

}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17" // Certifique-se de que sua versão do Java suporta isso
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE // Evita conflitos no JAR
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}